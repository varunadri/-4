34) 0000000000000000000000000000000000000000000000000000000000000000000000public class ExceptionDemo {

public static void main(String[] args) {
  int i = 0;
  try
        {
            i = Integer.parseInt("abc");   
        }
      catch(Exception ex)
        {
            System.out.println("Exception");
        }
     finally
   {
   System.out.println("i = "+i);
  }}}

What will be the output of above code?
Single Choice - Select one correct answer from the options list.
Exception
i = 0
i = abc
no output
Exception

A
-----------------------------------------------------------------------------------------------------------------------------------------------------

Q35

 
What is the default value of a boolean datatype?
Single Choice - Select one correct answer from the options list.
FALSE
True
0
1

A
-----------------------------------------------------------------------------------------------------------------------------------------------------

Q36

 
Refer the below code and predict the output.

public class Demo {
public static void main(String[] arg)
{
String str = "Cap";
String str1="Gemini";
str.concat(str1);
System.out.println(str);
}
}
Single Choice - Select one correct answer from the options list.
CapGemini
Cap
Gemini
No output

B
-----------------------------------------------------------------------------------------------------------------------------------------------------

Q37

 
public class Demo {
public static void main(String[] args)
{
try (Scanner sc = new Scanner(System.n)
{
// try block
} catch (Exception e)
{
e.printStackTrace();
}
}
}

Which of the statement is true about try with resource used in above code?
Single Choice - Select one correct answer from the options list.
Scanner resource will be closed automatically whether try block executed with or without exception.
Scanner needs to close explicitly with close() method
Scanner resource can not be used with try here
Scanner resource will be closed automatically only in the case if try block will execute successfully.

A
-----------------------------------------------------------------------------------------------------------------------------------------------------

Q38

 
Yashwant wants to create a user defined Unchecked exception, so he creates a class , 
help him to choose the correct base class from given options?
Single Choice - Select one correct answer from the options list.
java.lang.RuntimeException
java.lang.Unchecked
java.lang.Throwable
java.lang.Exception

A
-----------------------------------------------------------------------------------------------------------------------------------------------------

Q39

 
If object of FileOutputStream created by the below code and the file already exist with same name 
then what will happened?

FileOutputStream fin = new FileOutputStream("Data.txt");
Single Choice - Select one correct answer from the options list.
File will be overwritten
It will throw excetion as it can not create file with same name.
It will append the file.
None of the above

A
-----------------------------------------------------------------------------------------------------------------------------------------------------

Q40

 
What are the 3 components of JVM?
Single Choice - Select one correct answer from the options list.
1. Class Loader
2. Byte Code Verifier
3. Security Manager

1. Loader
2. Verifier
3. Security Manager

1. Compiler
2. Interpreter
3. Verifier & Security 

1. Compiler
2. Class Loader & Verifier
3. Security Manager

A
-----------------------------------------------------------------------------------------------------------------------------------------------------

Q41

 
Which of the given below interface declaration is applicable only in Java 8?
Single Choice - Select one correct answer from the options list.
interface Demo
{
}
 
interface Demo
{
static int method(){
return 1;
}
default String sayHello(){
return "hello";
}
}
 
interface Demo
{
int var =90;
}
 
interface Demo
{
public String sayHello();
}
-----------------------------------------------------------------------------------------------------------------------------------------------------
 
Q42

 
Which of the given method is of File class?
Single Choice - Select one correct answer from the options list.
create()
exists()
update()
None of above

B
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q43

 
Which of the following keyword is used to skip the fields to be persisted in file during serialization?
Single Choice - Select one correct answer from the options list.
transient
final
private
public

A
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q44

 
What is true about Constructors?

1. Constructors can have any name
2. Constructors have return type
3. Constructor have the same name as class name
Single Choice - Select one correct answer from the options list.
1, 2
3
1,2,3
2, 3

B
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q45

 
abstract public class Rectangle {
abstract void addRectangle();
 }

class ConsumableRectangle extends Rectangle{
public void addRectangle()
{
//  add Rectangles
}

}

Pickup the valid statement about the above Java code.
Single Choice - Select one correct answer from the options list.
code will compile without any errors.
Gives compilation error, because abstract class by default will have abstract methods only, 
so methods in the abstract class should not be declared as abstract.
Gives compilation errors because ConsumableRectangle must also be declared as abstract.
None of the above

A
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q46

 
class Demo{
public static void main(String[] args)
{
try{
  int num = 5 / 0;
  System.out.print("A");
  } 
  catch(RuntimeException ex)
{
  System.out.print("B");
  } 
  finally{
  System.out.print(" C");
}
} }
Explain the control flow in above code.
Single Choice - Select one correct answer from the options list.
It will execute try block completely then catch block and then finally block
It will start with try block and then throw exception, so will execute the catch block and then finally block
It will execute try block completely and then finally block.
It will execute the try block and then throw the exception with stacktrace

B
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q47

 
Match the following:

i.  TreeSet
ii.  HashSet
iii. HashMap
iv. Hashtable

a. Unordered, unsorted, unique collection of objects.
b. Sorted and unique collection of objects.
c. Synchronized collection of key value pair, where keys are unique, unsorted and unordered.
d. Collection of key value pair, where keys are unique, unsorted and unordered. One null key is allowed
Single Choice - Select one correct answer from the options list.
i-b
ii-a
iii-d
iv-c
 
i-a
ii-b
iii-d
iv-c
 
i-b
ii-a
iii-c
iv-d
 
i-b
ii-d
iii-a
iv-c

A
-----------------------------------------------------------------------------------------------------------------------------------------------------
 
Q48

 
In sleep method, what is the datatype of the argument?
Single Choice - Select one correct answer from the options list.
float
byte
long
char

C
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q49

 
Which code can be inserted at Line X to print "Equal"?

public class EqTest{
  public static void main(String argv[]){
   EqTest e=new EqTest();
  }

 EqTest(){
   String s="Java";
   String s2="java";
   // Line X
    {
    System.out.println("Equal");
    }else
    {
    System.out.println("Not equal");
   }
  }
}
Single Choice - Select one correct answer from the options list.
if(s==s2)
if(s.equals(s2))
if(s.equalsIgnoreCase(s2))
if(s.noCaseMatch(s2))

C
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q50

 
What will be the output of below code snippet?

int ch=5;
switch(ch)
{
default: System.out.println("Invalid");
break;
 case 0:System.out.println("Zero");
 case 1:System.out.println("One");
        break;
 case 2:System.out.println("Two");
break;

}
Single Choice - Select one correct answer from the options list.
Zero
One

One
Two

Will give compile time error as default case is written first.
Invalid

D
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q51

 
Given the following code fragment:

 XXXX  choice ; // variable choice is declared and initialized here
 switch( choice ) 
{
   case 100 : System.out.println("One hundred");break ;
   case 20 : System.out.println("Twenty");break ;
   case 30 : System.out.println("Thirty");break ;
 }

Choose the declarations of choice which will not cause a compiler error. 
Single Choice - Select one correct answer from the options list.
byte choice = 100;
short choice = 100;
int choice = 300;
All of the above

D
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q52

 
To prevent inheritance of a class, which of the following keyword can be used?
Single Choice - Select one correct answer from the options list.
super
constant
class
final

D
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q53

 
class Shape{
public Shape()
{}
}
class Rectangle extends Shape{
}
public class MainClass
{
public static void main(String []args)
{
  Shape shape =  new Rectangle();//line 1
  Rectangle rect = (Rectangle)shape;//line 2
}}

What is the true statement about above code?
Single Choice - Select one correct answer from the options list.
This code will compile and run successfully
This will generate ClassCastException as shape can not be typecasted to Rectangle
It will work fine if line 1 will be replaced by below given code
Shape shape = new Shape();
None of the above

A
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q54

 
Which of the below is the return type of the run method()?
Single Choice - Select one correct answer from the options list.
String
void
int
Thread

B
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q55

 
public class HashMapDemo {
public static void main(String[] args) 
{
HashMap<Integer,String> map = new HashMap<Integer,String>();
  map.put(101, "Capgemini");
  map.put(102, "Global");
  map.put(103, "Solutions");
  System.out.println(map);
}
}

What will be the output of above code?
Single Choice - Select one correct answer from the options list.
{101=Capgemini, 102=Global, 103=Solutions}
{101, 102, 103}
{Capgemini, Global, Solutions}
It will generate Exception

A
-----------------------------------------------------------------------------------------------------------------------------------------------------

Q56

 
@FunctionalInterface
interface MyInterface{
void method1();
void method2();
}

What will be the issue in the above code?
Single Choice - Select one correct answer from the options list.
There is no issue in the code.
It will give compilation error as Functional interface should not contain more than one abstract method.
There is no annotation as FunctionalInterface in java.
It will give compilation error as abstract keyword is missing in the code.

B
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q57

 
Which of the following is true regarding Java?

a. Java is a robust programming language
b. Java is a platform dependent programming language.
C. Abstract class can have concrete methods
Single Choice - Select one correct answer from the options list.
option a
option a & b
option b & c
option a & c

D
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q58

 
What will be the output of following program?

public class Test {
 public static void main(String[] args) 
{
  String s1 = "CG";  
    String s2 = s1;  
    String s3 = new String("CG");  
    String s4 = new String("CG");  
    System.out.println(s1 == s2);  
    System.out.println(s1.equals(s2));  
    System.out.println(s3 == s4);  
    System.out.println(s3.equals(s4));  
 }
}
Single Choice - Select one correct answer from the options list.
true
true
true
true

Btrue
true
false
true

false
false
false
false
No output
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q59

 
public class Demo {
public static void myFunction(String className) throws ClassNotFoundException {
Class.forName(className);
} 
public static void main(String[] args)
{
try {
myFunction("java.lang.String");
System.out.println("Success");
} catch (ClassNotFoundException e)
{
System.out.println("Failure");
}
}
}

Refer the above code and predict the output?
Single Choice - Select one correct answer from the options list.
No output
Success
Failure
Compilation fails as throws clause is not used properly

B
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q60

 
public interface Flyer{
public abstract void fly();
}

Identify the lambda expression for the function fly() to display "Flying" in the console?                                               @@@@@@@@@
Single Choice - Select one correct answer from the options list.
() -> return "flying";
void fly() -> { System.out.println("flying"); }
fly() -> { return "flying" }
()->System.out.println("flying");
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q61

 
Is private members accessible in derived classed?
Single Choice - Select one correct answer from the options list.
TRUE
FALSE

B
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q62

 
public class Sample{
 public static void main(String agrs[])
    {
        for(int i=1; i<=10; i++);
        System.out.print(i);
    }
}

What is the output of the above code snippet?
Single Choice - Select one correct answer from the options list.
prints from 1 to 10
Compilation error as for loop cannot be terminated using semi-colon
prints nothing
Compilation fails as variable 'i' is declared inside for loop

D
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q63

 
Consider the following Java Code snippet. The code does not have any compilation error.

.........
TreeSet tree = new TreeSet();
tree.add("one");
tree.add("two");
tree.add("three");
tree.add("four");
tree.add("two");
Iterator it = tree.iterator();
while (it.hasNext() ) 
{
    System.out.print( it.next() + " " );
}
....................

What will be the output?
Single Choice - Select one correct answer from the options list.
one two three four
four three two one
four one three two
one two three four one

C
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q64

 
Which of the below call causes the thread to begin the execution?
Single Choice - Select one correct answer from the options list.
thread.run()
thread.join()
thread.join(100)
thread.start()

D
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q65

 
What will be the output of the program?

import java.util.*; 
class Test
{
    public static void main (String[] args) 
    {
          List<String> listStrings = Arrays.asList("Cherry", "is", "Sweet");
 
 Collections.sort(listStrings);
  
 System.out.println(listStrings);                                          
    } 
}
Single Choice - Select one correct answer from the options list.
[Cherry, Sweet, is]
[Cherry, is, Sweet]
compilation fails as there is no asList() method in Arrays class
throws exception at runtime

A
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q66

 
import java.util.*;

public class Question
{
public static void main(String[] args)
{
Scanner sc=new Scanner("0 1 23 hi 1 hello 2");
 while(sc.hasNext())
 {
 System.out.print(sc.nextInt());
 }
}
}

What is the output of the above program?
Single Choice - Select one correct answer from the options list.
prints 0 1 23 1 2
compilation fails as hasNext() cannot be used along with nextInt()
Compiles but throws InputMismatchException at the hi value fetched from scanner which is not int.
prints 0 1 23

C
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q67

 
Which of the following method is not a part of Thread class?
Single Choice - Select one correct answer from the options list.
currentThread()
sleep()
isAlive()
finalize()

D
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q68
																@@@@@@@@@@@@@@@@@@@
 
Which of the below lambda expression is valid format?
Single Choice - Select one correct answer from the options list.
x -> {return x+10;}
{String s -> s.toUpperCase()}
String {s} -> System.out.println(s)
({x, y}) -> {return x+y;};
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q69

 
Which of the given statement is true about UnChecked Exceptions?
Single Choice - Select one correct answer from the options list.
They are checked by compiler at the time of compilation
RuntimeException and its subclasses comes in the category of UnChecked Exception
SQLException is unchecked exception.
These exception must be handled in the code.

B
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q70

 
Which of the below keyword is used for inheritance?
Single Choice - Select one correct answer from the options list.
final
abstract
extend
throws

C
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q71

 
Select the correct method having variable argument feature.
Single Choice - Select one correct answer from the options list.
void print(int a,int b,String...c)
void print(int a, int b...,float c)
public int print(int...s,int a,int b)
public int print(int...x, int...y)

A
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q72

 
Which of the below method needs to override when Serializable interface is implemented? 
Single Choice - Select one correct answer from the options list.
write() methof need to override
save() method needs to override
There is no abstract method in this interface.
create() method needs to override
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q73

 
What is the output of this program?

    import java.util.*;
    class Maps {
        public static void main(String args[]) {
            TreeMap obj = new TreeMap();
            obj.put("AB", new Integer(1));
            obj.put("ACB", new Integer(2));
            obj.put("ABC", new Integer(3));
            System.out.println(obj.entrySet());
        }
    }
Single Choice - Select one correct answer from the options list.
[AB, ACB, ABC]
[1, 2, 3]
{AB=1, ABC=2, ACB=3}
[AB=1, ABC=3, ACB=2]

D
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q74

 
What type of set would you use,if you wanted it in sorted order?
Single Choice - Select one correct answer from the options list.
HashSet
LinkedHashSet
TreeSet
None of above

C
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q75

 
Which of the following Java interface is used by TreeSet to sort user defined objects?
Single Choice - Select one correct answer from the options list.
SortedSet
SortedMap
Comparable
None

A
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q76

 
What is the output of the following?

import java.util.*;
public class Mainclass
{
 
 public static void main(String[] args)
 { 
  Set<String> set=new HashSet<String>();//--- Line 1
  set.add("B");//-- Line 2
  set.add(11);//-- Line 3
  System.out.println(set); //-- Line 4
   
 }  
}
Single Choice - Select one correct answer from the options list.
Line 1 should be new Set();
Line 3 gives compilation error
Line 3 gives exception during run time
Line 4 shows compilation error as we cannot print set directly

C
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q77

 
List out the wrapper classes from below  and select the correct option.

A. Random
B. Byte
C. Vector
D. Integer
E. Short
F. Double
G. Character
Single Choice - Select one correct answer from the options list.
B, D & E
B, D, E, F & G
B, D & F
D,E & F

B
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q78

 
Programmers can mark a collection e.g List as being restricted to contain a particular data type.
The above statement is related to _________ concept in Java.
Single Choice - Select one correct answer from the options list.
Access restrictions
Generics
Garbage collection
Multithreading

A
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q79

 
Extends keyword is used to inherit one interface in another interface?
Single Choice - Select one correct answer from the options list.
TRUE
FALSE

A
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q80

 
public class StreamDemo {

 public static void main(String[] args) {
  
   BiFunction<String,String,String>fun = (str1,str2)->str1+str2;
   String result=null;
   result = fun.apply("10", "20");
   System.out.println(result);
 }
}

What will be the output of above code?
Single Choice - Select one correct answer from the options list.
1020
30
compilation error
Exception

C
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q81

 
import java.util.Arrays;
import java.util.List;

public class Qn {
 public static void main(String[] args) {

  List<Integer> numList = Arrays.asList(34, 10, 60, 60, 3, 12, 65, 1, 8);
  numList.stream().filter((n) -> n <= 60 && n > 10).sorted()
    .forEach(System.out::println);
 }
}

What will be the output of above code snippet?
Single Choice - Select one correct answer from the options list.
12
34
60
60

10
12
34
60
60

10
60
60

12
34
60

A
-----------------------------------------------------------------------------------------------------------------------------------------------------

Q82

 
Which statement is correct about Exception Handling of Java?
Single Choice - Select one correct answer from the options list.
We can not write more than one catch block
Nested try block is invalid in java
finally block will be executed only if there is no exception raised
try block can be followed by either a catch block or finally block or both.

D
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q83

 
class multithreaded_programing
    {
        public static void main(String args[])
        {
             System.out.println(t.getPriority());  
        }
    }

What will be the output of above code?
Single Choice - Select one correct answer from the options list.
0
10
5
1

C
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q84

 
Which of the following is used to read the bytes?
Single Choice - Select one correct answer from the options list.
InputStream
OutputStream
Reader
Writer

A
-----------------------------------------------------------------------------------------------------------------------------------------------------
Q85

 
package com.capgemini.corejava;
public class Test {
 String name; 
public Test() 
{
  name = "Sara";
   }
 public static void main(String[] args)
 {  
  
  System.out.println(name);
}
}

What will be the reason of the compilation error in the above code?
Single Choice - Select one correct answer from the options list.
There will be no compilation error
Compilation error, as String name is not declared with static modifier.
Compilation error as constructor should be declared as static.
Compilation error as name field will not be accessible inside the constructor.

B